/*
 * lodgea-java
 * LODGEA SDK for java. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lodgea.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * InlineResponse2002List
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-07T12:22:24.387616647Z[Etc/UTC]")
public class InlineResponse2002List {
  public static final String SERIALIZED_NAME_PUBLISHED = "published";
  @SerializedName(SERIALIZED_NAME_PUBLISHED)
  private Boolean published;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTY_ID = "propertyId";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ID)
  private String propertyId;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private BigDecimal lastUpdated;

  public InlineResponse2002List() { 
  }

  public InlineResponse2002List published(Boolean published) {
    
    this.published = published;
    return this;
  }

   /**
   * Whether the property is in published state.
   * @return published
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "Whether the property is in published state.")

  public Boolean getPublished() {
    return published;
  }


  public void setPublished(Boolean published) {
    this.published = published;
  }


  public InlineResponse2002List name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the property.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Strandresidenz Sylt", required = true, value = "The name of the property.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InlineResponse2002List propertyId(String propertyId) {
    
    this.propertyId = propertyId;
    return this;
  }

   /**
   * The unique identifier for the property.
   * @return propertyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "strandresidenz-sylt", required = true, value = "The unique identifier for the property.")

  public String getPropertyId() {
    return propertyId;
  }


  public void setPropertyId(String propertyId) {
    this.propertyId = propertyId;
  }


  public InlineResponse2002List image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * The file name of the image for the property.
   * @return image
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "obj_1280x960_54620_001.jpg", required = true, value = "The file name of the image for the property.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public InlineResponse2002List address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * The address of the property.
   * @return address
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Nordhedig 20 25980 Sylt Germany", required = true, value = "The address of the property.")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public InlineResponse2002List lastUpdated(BigDecimal lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * The timestamp of the last update to the property (Unix in ms).
   * @return lastUpdated
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1652091337389", required = true, value = "The timestamp of the last update to the property (Unix in ms).")

  public BigDecimal getLastUpdated() {
    return lastUpdated;
  }


  public void setLastUpdated(BigDecimal lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002List inlineResponse2002List = (InlineResponse2002List) o;
    return Objects.equals(this.published, inlineResponse2002List.published) &&
        Objects.equals(this.name, inlineResponse2002List.name) &&
        Objects.equals(this.propertyId, inlineResponse2002List.propertyId) &&
        Objects.equals(this.image, inlineResponse2002List.image) &&
        Objects.equals(this.address, inlineResponse2002List.address) &&
        Objects.equals(this.lastUpdated, inlineResponse2002List.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(published, name, propertyId, image, address, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002List {\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

