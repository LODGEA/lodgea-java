/*
 * lodgea-java
 * LODGEA SDK for java. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lodgea.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2003PropertyAddressList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-07T12:22:24.387616647Z[Etc/UTC]")
public class InlineResponse2003PropertyAddressList {
  public static final String SERIALIZED_NAME_ADDRESS_LINE = "addressLine";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE)
  private String addressLine;

  public static final String SERIALIZED_NAME_PROPERTY_NAME = "propertyName";
  @SerializedName(SERIALIZED_NAME_PROPERTY_NAME)
  private String propertyName;

  public static final String SERIALIZED_NAME_CITY_NAME = "cityName";
  @SerializedName(SERIALIZED_NAME_CITY_NAME)
  private String cityName;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public InlineResponse2003PropertyAddressList() { 
  }

  public InlineResponse2003PropertyAddressList addressLine(String addressLine) {
    
    this.addressLine = addressLine;
    return this;
  }

   /**
   * The first line of the address for this contact
   * @return addressLine
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Nordhedig 20", required = true, value = "The first line of the address for this contact")

  public String getAddressLine() {
    return addressLine;
  }


  public void setAddressLine(String addressLine) {
    this.addressLine = addressLine;
  }


  public InlineResponse2003PropertyAddressList propertyName(String propertyName) {
    
    this.propertyName = propertyName;
    return this;
  }

   /**
   * The name of the property for this contact
   * @return propertyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Strandresidenz Sylt", value = "The name of the property for this contact")

  public String getPropertyName() {
    return propertyName;
  }


  public void setPropertyName(String propertyName) {
    this.propertyName = propertyName;
  }


  public InlineResponse2003PropertyAddressList cityName(String cityName) {
    
    this.cityName = cityName;
    return this;
  }

   /**
   * The city of this contact
   * @return cityName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Sylt", required = true, value = "The city of this contact")

  public String getCityName() {
    return cityName;
  }


  public void setCityName(String cityName) {
    this.cityName = cityName;
  }


  public InlineResponse2003PropertyAddressList postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The postal code of this contact
   * @return postalCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "25980", required = true, value = "The postal code of this contact")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public InlineResponse2003PropertyAddressList state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * The state/region of this contact
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SH", value = "The state/region of this contact")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public InlineResponse2003PropertyAddressList countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The country code of this contact
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DE", value = "The country code of this contact")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003PropertyAddressList inlineResponse2003PropertyAddressList = (InlineResponse2003PropertyAddressList) o;
    return Objects.equals(this.addressLine, inlineResponse2003PropertyAddressList.addressLine) &&
        Objects.equals(this.propertyName, inlineResponse2003PropertyAddressList.propertyName) &&
        Objects.equals(this.cityName, inlineResponse2003PropertyAddressList.cityName) &&
        Objects.equals(this.postalCode, inlineResponse2003PropertyAddressList.postalCode) &&
        Objects.equals(this.state, inlineResponse2003PropertyAddressList.state) &&
        Objects.equals(this.countryCode, inlineResponse2003PropertyAddressList.countryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine, propertyName, cityName, postalCode, state, countryCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003PropertyAddressList {\n");
    sb.append("    addressLine: ").append(toIndentedString(addressLine)).append("\n");
    sb.append("    propertyName: ").append(toIndentedString(propertyName)).append("\n");
    sb.append("    cityName: ").append(toIndentedString(cityName)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

