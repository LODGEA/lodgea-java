/*
 * lodgea-java
 * LODGEA SDK for java. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lodgea.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lodgea.model.PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner;
import com.lodgea.model.PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner;
import com.lodgea.model.PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerGuaranteePolicy;
import com.lodgea.model.PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerPetsPolicy;
import com.lodgea.model.PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.lodgea.JSON;

/**
 * The policy info for this product.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-06T17:11:31.294726198Z[Etc/UTC]")
public class PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo {
  public static final String SERIALIZED_NAME_CHECK_IN_TIME = "checkInTime";
  @SerializedName(SERIALIZED_NAME_CHECK_IN_TIME)
  private BigDecimal checkInTime;

  public static final String SERIALIZED_NAME_CHECK_OUT_TIME = "checkOutTime";
  @SerializedName(SERIALIZED_NAME_CHECK_OUT_TIME)
  private BigDecimal checkOutTime;

  public static final String SERIALIZED_NAME_TOTAL_GUEST_COUNT = "totalGuestCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_GUEST_COUNT)
  private BigDecimal totalGuestCount;

  public static final String SERIALIZED_NAME_CANCELLATION_POLICY_LIST = "cancellationPolicyList";
  @SerializedName(SERIALIZED_NAME_CANCELLATION_POLICY_LIST)
  private List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner> cancellationPolicyList = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADVANCE_BOOKING_MIN = "advanceBookingMin";
  @SerializedName(SERIALIZED_NAME_ADVANCE_BOOKING_MIN)
  private BigDecimal advanceBookingMin;

  public static final String SERIALIZED_NAME_ADVANCE_BOOKING_MAX = "advanceBookingMax";
  @SerializedName(SERIALIZED_NAME_ADVANCE_BOOKING_MAX)
  private BigDecimal advanceBookingMax;

  public static final String SERIALIZED_NAME_PETS_POLICY = "petsPolicy";
  @SerializedName(SERIALIZED_NAME_PETS_POLICY)
  private PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerPetsPolicy petsPolicy;

  /**
   * The type of the prepayment policy.
   */
  @JsonAdapter(PrepaymentPolicyEnum.Adapter.class)
  public enum PrepaymentPolicyEnum {
    CANCELLATION_FEE_BEGINS("after_cancellation_fee_begins"),
    
    RESERVATION_IS_MADE("after_reservation_is_made");

    private String value;

    PrepaymentPolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PrepaymentPolicyEnum fromValue(String value) {
      for (PrepaymentPolicyEnum b : PrepaymentPolicyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PrepaymentPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PrepaymentPolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PrepaymentPolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PrepaymentPolicyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PREPAYMENT_POLICY = "prepaymentPolicy";
  @SerializedName(SERIALIZED_NAME_PREPAYMENT_POLICY)
  private PrepaymentPolicyEnum prepaymentPolicy;

  public static final String SERIALIZED_NAME_GUARANTEE_POLICY = "guaranteePolicy";
  @SerializedName(SERIALIZED_NAME_GUARANTEE_POLICY)
  private PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerGuaranteePolicy guaranteePolicy;

  public static final String SERIALIZED_NAME_TAX_POLICY_LIST = "taxPolicyList";
  @SerializedName(SERIALIZED_NAME_TAX_POLICY_LIST)
  private List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner> taxPolicyList = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEE_POLICY_LIST = "feePolicyList";
  @SerializedName(SERIALIZED_NAME_FEE_POLICY_LIST)
  private List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner> feePolicyList = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo() {
  }

  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo checkInTime(BigDecimal checkInTime) {
    
    this.checkInTime = checkInTime;
    return this;
  }

   /**
   * Check-in time (unix timestamp in ms).
   * @return checkInTime
  **/
  @javax.annotation.Nonnull

  public BigDecimal getCheckInTime() {
    return checkInTime;
  }


  public void setCheckInTime(BigDecimal checkInTime) {
    this.checkInTime = checkInTime;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo checkOutTime(BigDecimal checkOutTime) {
    
    this.checkOutTime = checkOutTime;
    return this;
  }

   /**
   * Check-out time (unix timestamp in ms).
   * @return checkOutTime
  **/
  @javax.annotation.Nonnull

  public BigDecimal getCheckOutTime() {
    return checkOutTime;
  }


  public void setCheckOutTime(BigDecimal checkOutTime) {
    this.checkOutTime = checkOutTime;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo totalGuestCount(BigDecimal totalGuestCount) {
    
    this.totalGuestCount = totalGuestCount;
    return this;
  }

   /**
   * The maximum number of guests allowed.
   * @return totalGuestCount
  **/
  @javax.annotation.Nullable

  public BigDecimal getTotalGuestCount() {
    return totalGuestCount;
  }


  public void setTotalGuestCount(BigDecimal totalGuestCount) {
    this.totalGuestCount = totalGuestCount;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo cancellationPolicyList(List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner> cancellationPolicyList) {
    
    this.cancellationPolicyList = cancellationPolicyList;
    return this;
  }

  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo addCancellationPolicyListItem(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner cancellationPolicyListItem) {
    this.cancellationPolicyList.add(cancellationPolicyListItem);
    return this;
  }

   /**
   * List of cancellation policies.
   * @return cancellationPolicyList
  **/
  @javax.annotation.Nonnull

  public List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner> getCancellationPolicyList() {
    return cancellationPolicyList;
  }


  public void setCancellationPolicyList(List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner> cancellationPolicyList) {
    this.cancellationPolicyList = cancellationPolicyList;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo advanceBookingMin(BigDecimal advanceBookingMin) {
    
    this.advanceBookingMin = advanceBookingMin;
    return this;
  }

   /**
   * The minimum number of days in advance a booking must be made
   * @return advanceBookingMin
  **/
  @javax.annotation.Nonnull

  public BigDecimal getAdvanceBookingMin() {
    return advanceBookingMin;
  }


  public void setAdvanceBookingMin(BigDecimal advanceBookingMin) {
    this.advanceBookingMin = advanceBookingMin;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo advanceBookingMax(BigDecimal advanceBookingMax) {
    
    this.advanceBookingMax = advanceBookingMax;
    return this;
  }

   /**
   * The maximum number of days in advance a booking can be made
   * @return advanceBookingMax
  **/
  @javax.annotation.Nonnull

  public BigDecimal getAdvanceBookingMax() {
    return advanceBookingMax;
  }


  public void setAdvanceBookingMax(BigDecimal advanceBookingMax) {
    this.advanceBookingMax = advanceBookingMax;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo petsPolicy(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerPetsPolicy petsPolicy) {
    
    this.petsPolicy = petsPolicy;
    return this;
  }

   /**
   * Get petsPolicy
   * @return petsPolicy
  **/
  @javax.annotation.Nullable

  public PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerPetsPolicy getPetsPolicy() {
    return petsPolicy;
  }


  public void setPetsPolicy(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerPetsPolicy petsPolicy) {
    this.petsPolicy = petsPolicy;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo prepaymentPolicy(PrepaymentPolicyEnum prepaymentPolicy) {
    
    this.prepaymentPolicy = prepaymentPolicy;
    return this;
  }

   /**
   * The type of the prepayment policy.
   * @return prepaymentPolicy
  **/
  @javax.annotation.Nullable

  public PrepaymentPolicyEnum getPrepaymentPolicy() {
    return prepaymentPolicy;
  }


  public void setPrepaymentPolicy(PrepaymentPolicyEnum prepaymentPolicy) {
    this.prepaymentPolicy = prepaymentPolicy;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo guaranteePolicy(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerGuaranteePolicy guaranteePolicy) {
    
    this.guaranteePolicy = guaranteePolicy;
    return this;
  }

   /**
   * Get guaranteePolicy
   * @return guaranteePolicy
  **/
  @javax.annotation.Nullable

  public PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerGuaranteePolicy getGuaranteePolicy() {
    return guaranteePolicy;
  }


  public void setGuaranteePolicy(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerGuaranteePolicy guaranteePolicy) {
    this.guaranteePolicy = guaranteePolicy;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo taxPolicyList(List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner> taxPolicyList) {
    
    this.taxPolicyList = taxPolicyList;
    return this;
  }

  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo addTaxPolicyListItem(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner taxPolicyListItem) {
    this.taxPolicyList.add(taxPolicyListItem);
    return this;
  }

   /**
   * A list of taxes and their policies.
   * @return taxPolicyList
  **/
  @javax.annotation.Nonnull

  public List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner> getTaxPolicyList() {
    return taxPolicyList;
  }


  public void setTaxPolicyList(List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner> taxPolicyList) {
    this.taxPolicyList = taxPolicyList;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo feePolicyList(List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner> feePolicyList) {
    
    this.feePolicyList = feePolicyList;
    return this;
  }

  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo addFeePolicyListItem(PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner feePolicyListItem) {
    this.feePolicyList.add(feePolicyListItem);
    return this;
  }

   /**
   * A list of fees and their policies.
   * @return feePolicyList
  **/
  @javax.annotation.Nonnull

  public List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner> getFeePolicyList() {
    return feePolicyList;
  }


  public void setFeePolicyList(List<PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner> feePolicyList) {
    this.feePolicyList = feePolicyList;
  }


  public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of this policy.
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo = (PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo) o;
    return Objects.equals(this.checkInTime, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.checkInTime) &&
        Objects.equals(this.checkOutTime, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.checkOutTime) &&
        Objects.equals(this.totalGuestCount, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.totalGuestCount) &&
        Objects.equals(this.cancellationPolicyList, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.cancellationPolicyList) &&
        Objects.equals(this.advanceBookingMin, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.advanceBookingMin) &&
        Objects.equals(this.advanceBookingMax, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.advanceBookingMax) &&
        Objects.equals(this.petsPolicy, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.petsPolicy) &&
        Objects.equals(this.prepaymentPolicy, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.prepaymentPolicy) &&
        Objects.equals(this.guaranteePolicy, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.guaranteePolicy) &&
        Objects.equals(this.taxPolicyList, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.taxPolicyList) &&
        Objects.equals(this.feePolicyList, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.feePolicyList) &&
        Objects.equals(this.name, propertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkInTime, checkOutTime, totalGuestCount, cancellationPolicyList, advanceBookingMin, advanceBookingMax, petsPolicy, prepaymentPolicy, guaranteePolicy, taxPolicyList, feePolicyList, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo {\n");
    sb.append("    checkInTime: ").append(toIndentedString(checkInTime)).append("\n");
    sb.append("    checkOutTime: ").append(toIndentedString(checkOutTime)).append("\n");
    sb.append("    totalGuestCount: ").append(toIndentedString(totalGuestCount)).append("\n");
    sb.append("    cancellationPolicyList: ").append(toIndentedString(cancellationPolicyList)).append("\n");
    sb.append("    advanceBookingMin: ").append(toIndentedString(advanceBookingMin)).append("\n");
    sb.append("    advanceBookingMax: ").append(toIndentedString(advanceBookingMax)).append("\n");
    sb.append("    petsPolicy: ").append(toIndentedString(petsPolicy)).append("\n");
    sb.append("    prepaymentPolicy: ").append(toIndentedString(prepaymentPolicy)).append("\n");
    sb.append("    guaranteePolicy: ").append(toIndentedString(guaranteePolicy)).append("\n");
    sb.append("    taxPolicyList: ").append(toIndentedString(taxPolicyList)).append("\n");
    sb.append("    feePolicyList: ").append(toIndentedString(feePolicyList)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("checkInTime");
    openapiFields.add("checkOutTime");
    openapiFields.add("totalGuestCount");
    openapiFields.add("cancellationPolicyList");
    openapiFields.add("advanceBookingMin");
    openapiFields.add("advanceBookingMax");
    openapiFields.add("petsPolicy");
    openapiFields.add("prepaymentPolicy");
    openapiFields.add("guaranteePolicy");
    openapiFields.add("taxPolicyList");
    openapiFields.add("feePolicyList");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("checkInTime");
    openapiRequiredFields.add("checkOutTime");
    openapiRequiredFields.add("cancellationPolicyList");
    openapiRequiredFields.add("advanceBookingMin");
    openapiRequiredFields.add("advanceBookingMax");
    openapiRequiredFields.add("taxPolicyList");
    openapiRequiredFields.add("feePolicyList");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo is not found in the empty JSON string", PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("cancellationPolicyList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancellationPolicyList` to be an array in the JSON string but got `%s`", jsonObj.get("cancellationPolicyList").toString()));
      }

      JsonArray jsonArraycancellationPolicyList = jsonObj.getAsJsonArray("cancellationPolicyList");
      // validate the required field `cancellationPolicyList` (array)
      for (int i = 0; i < jsonArraycancellationPolicyList.size(); i++) {
        PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerCancellationPolicyListInner.validateJsonObject(jsonArraycancellationPolicyList.get(i).getAsJsonObject());
      };
      // validate the optional field `petsPolicy`
      if (jsonObj.get("petsPolicy") != null && !jsonObj.get("petsPolicy").isJsonNull()) {
        PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerPetsPolicy.validateJsonObject(jsonObj.getAsJsonObject("petsPolicy"));
      }
      if ((jsonObj.get("prepaymentPolicy") != null && !jsonObj.get("prepaymentPolicy").isJsonNull()) && !jsonObj.get("prepaymentPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prepaymentPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prepaymentPolicy").toString()));
      }
      // validate the optional field `guaranteePolicy`
      if (jsonObj.get("guaranteePolicy") != null && !jsonObj.get("guaranteePolicy").isJsonNull()) {
        PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerGuaranteePolicy.validateJsonObject(jsonObj.getAsJsonObject("guaranteePolicy"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("taxPolicyList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxPolicyList` to be an array in the JSON string but got `%s`", jsonObj.get("taxPolicyList").toString()));
      }

      JsonArray jsonArraytaxPolicyList = jsonObj.getAsJsonArray("taxPolicyList");
      // validate the required field `taxPolicyList` (array)
      for (int i = 0; i < jsonArraytaxPolicyList.size(); i++) {
        PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerTaxPolicyListInner.validateJsonObject(jsonArraytaxPolicyList.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("feePolicyList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `feePolicyList` to be an array in the JSON string but got `%s`", jsonObj.get("feePolicyList").toString()));
      }

      JsonArray jsonArrayfeePolicyList = jsonObj.getAsJsonArray("feePolicyList");
      // validate the required field `feePolicyList` (array)
      for (int i = 0; i < jsonArrayfeePolicyList.size(); i++) {
        PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.validateJsonObject(jsonArrayfeePolicyList.get(i).getAsJsonObject());
      };
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo>() {
           @Override
           public void write(JsonWriter out, PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo
  * @throws IOException if the JSON string is invalid with respect to PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo
  */
  public static PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo.class);
  }

 /**
  * Convert an instance of PropertiesPropertyIdGet200ResponseProductListInnerPolicyInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

