/*
 * lodgea-java
 * LODGEA SDK for java. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lodgea.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * InlineResponse200List
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-07T12:22:24.387616647Z[Etc/UTC]")
public class InlineResponse200List {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_LOWEST_PRICE = "lowestPrice";
  @SerializedName(SERIALIZED_NAME_LOWEST_PRICE)
  private BigDecimal lowestPrice;

  /**
   * The type of the found location.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#locationtypes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FORMATTED_ADDRESS("formatted_address"),
    
    PLACE_ID("place_id"),
    
    LOCALITY("locality"),
    
    ADMINISTRATIVE_AREA_LEVEL_1("administrative_area_level_1"),
    
    ADMINISTRATIVE_AREA_LEVEL_2("administrative_area_level_2"),
    
    ADMINISTRATIVE_AREA_LEVEL_3("administrative_area_level_3"),
    
    ADMINISTRATIVE_AREA_LEVEL_4("administrative_area_level_4"),
    
    ADMINISTRATIVE_AREA_LEVEL_5("administrative_area_level_5"),
    
    STATE_CODE("state_code"),
    
    COUNTRY("country"),
    
    COUNTRY_CODE("country_code"),
    
    POSTAL_CODE("postal_code"),
    
    LANGUAGE("language"),
    
    NATURAL_FEATURE("natural_feature"),
    
    ESTABLISHMENT("establishment"),
    
    SUBLOCALITY("sublocality"),
    
    SUBLOCALITY_LEVEL_1("sublocality_level_1"),
    
    SUBLOCALITY_LEVEL_2("sublocality_level_2"),
    
    SUBLOCALITY_LEVEL_3("sublocality_level_3"),
    
    SUBLOCALITY_LEVEL_4("sublocality_level_4"),
    
    SUBLOCALITY_LEVEL_5("sublocality_level_5"),
    
    STREETNUMBER("streetNumber");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public InlineResponse200List() { 
  }

  public InlineResponse200List name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the location.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Westerland", required = true, value = "The name of the location.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InlineResponse200List currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The currency code of the currency of the lowest price.
   * @return currencyCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "EUR", required = true, value = "The currency code of the currency of the lowest price.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public InlineResponse200List lowestPrice(BigDecimal lowestPrice) {
    
    this.lowestPrice = lowestPrice;
    return this;
  }

   /**
   * The lowest price available for this location.
   * @return lowestPrice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "99.99", required = true, value = "The lowest price available for this location.")

  public BigDecimal getLowestPrice() {
    return lowestPrice;
  }


  public void setLowestPrice(BigDecimal lowestPrice) {
    this.lowestPrice = lowestPrice;
  }


  public InlineResponse200List type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the found location.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#locationtypes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "sublocality", required = true, value = "The type of the found location.<p>See also <a href=\"#locationtypes\">in the appendix</a>.</p>")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200List inlineResponse200List = (InlineResponse200List) o;
    return Objects.equals(this.name, inlineResponse200List.name) &&
        Objects.equals(this.currencyCode, inlineResponse200List.currencyCode) &&
        Objects.equals(this.lowestPrice, inlineResponse200List.lowestPrice) &&
        Objects.equals(this.type, inlineResponse200List.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, currencyCode, lowestPrice, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200List {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    lowestPrice: ").append(toIndentedString(lowestPrice)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

